開発メモ

== x86 80bit 浮動小数 ==
geohash C extension 内では、浮動小数のバイト列を直接操作している。この際には IEEE 754 で仕様定義されている 64bit binary を想定している。実は Intel x86 の場合はアセンブラコードを書くことで計算途中のレジスタにある 80bit を取り出すことができて、より精度を高めることができる。

_…しかし 80bit 必要だろうか？たぶん必要ないので、この先に踏み込むのはやめておく。

== Visual Studio ==
gcc で開発していると、C99 仕様をあたりまえのように使ってしまう。ところが Visual C++ のコンパイラ cl.exe は C99 には対応していないので、変数定義などで不自由になる。Visual C++ は、その名の通り基本的に C++ なので、C++ で動作させたほうが便利になるようだ。

cl のオプションで C のソースコードを C++ のソースとして解釈してコンパイルすることができる。/Tp や /TP というオプション引数がある。ところが python distutils のセットアップの都合上、この手を使うのは、やっかいになる。

ここで発想を逆転させて、g++ を C99 のように使うことを試みる。基本的には C99 の C 言語で書きたいところだけれども、世の中の状況的にそれがままならないので、C99 流儀で書いた C++ のソースを C++ コンパイラでコンパイルするということ。幸いなことに stdint.h など C99 のヘッダには C++ で使用した際の逃げ道も用意されているので、それを使う。たとえば stdint.h であれば、__STDC_CONSTANT_MACROS などが役に立つ。